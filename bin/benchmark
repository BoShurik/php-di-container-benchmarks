#!/usr/bin/env php
<?php
declare(strict_types=1);

require getenv("PROJECT_ROOT") . "/app/bootstrap.php";

use DiContainerBenchmarks\Benchmark\Benchmark;
use DiContainerBenchmarks\Container\Aura\AuraContainer;
use DiContainerBenchmarks\Container\Auryn\AurynContainer;
use DiContainerBenchmarks\Container\Dice\DiceContainer;
use DiContainerBenchmarks\Container\Disco\DiscoContainer;
use DiContainerBenchmarks\Container\Laravel\LaravelContainer;
use DiContainerBenchmarks\Container\PhpDi\PhpDiContainer;
use DiContainerBenchmarks\Container\PHPixieDi\PHPixieDiContainer;
use DiContainerBenchmarks\Container\Pimple\PimpleContainer;
use DiContainerBenchmarks\Container\Symfony\SymfonyContainer;
use DiContainerBenchmarks\Container\Zen\ZenContainer;
use DiContainerBenchmarks\Container\ZendServiceManager\ZendServiceManagerContainer;
use DiContainerBenchmarks\Outputter\HtmlOutputter;
use DiContainerBenchmarks\TestSuite\TestSuite1;
use DiContainerBenchmarks\TestSuite\TestSuite2;
use DiContainerBenchmarks\TestSuite\TestSuite3;
use DiContainerBenchmarks\TestSuite\TestSuite4;

$testSuites = [
    new TestSuite1(),
    new TestSuite2(),
    new TestSuite3(),
    new TestSuite4(),
];

$containers = [
    new AuraContainer(),
    new AurynContainer(),
    new DiceContainer(),
    new DiscoContainer(),
    new LaravelContainer(),
    new PhpDiContainer(),
    new PHPixieDiContainer(),
    new PimpleContainer(),
    new SymfonyContainer(),
    new ZenContainer(),
    new ZendServiceManagerContainer(),
];

$outputters = [
    new HtmlOutputter(PROJECT_ROOT . "/var/benchmark.html"),
];

$benchmark = new Benchmark();
$benchmark->runBenchmark($testSuites, $containers, $outputters);
